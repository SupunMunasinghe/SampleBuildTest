name: Trigger Local Jenkins Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted   # Runs on Jenkins server
    steps:
      - name: Trigger Jenkins Job
        id: trigger
        env:
            JENKINS_TOKEN: ${{ secrets.JENKINS_ACCESS_TOKEN }}
            JENKINS_URL: http://localhost:8080
            JENKINS_USERNAME: exvbuild
            JENKINS_JOB_NAME: CMake_Build
        run: |
          echo "Triggering Jenkins job from GitHub Actions..."

          curl -X POST \
          "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/buildWithParameters?BRANCH_NAME=${GITHUB_REF_NAME}" \
          --user "${JENKINS_USERNAME}:${JENKINS_TOKEN}"
          LATEST_BUILD=$(curl -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/api/json")
          LATEST_BUILD_URL=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['lastBuild']['url'])" "$LATEST_BUILD")
          
          echo "Latest Build : $LATEST_BUILD"
          echo "Latest Build URL : $LATEST_BUILD_URL"
          echo "build_url=$LATEST_BUILD_URL" >> $GITHUB_OUTPUT
        
            

      - name: Wait for Jenkins job to complete
        run: |
          echo "Waiting for Jenkins job to complete..."
          while true; do
          BUILD_INFO=$(curl -s -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} \
            "${{ steps.trigger.outputs.build_url }}api/json")

          BUILDING=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['building'])" "$BUILD_INFO")
          RESULT=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['result'])" "$BUILD_INFO")

          if [[ "$BUILDING" == "false" ]]; then
            echo "Build finished with result: $RESULT"
            echo "result=$RESULT" >> $GITHUB_OUTPUT
            break
          echo "Still building..."
          sleep 5
          done

      - name: Notify GitHub PR (optional)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Posting build status to PR..."
          # You can use GitHub CLI or API here to comment on PR
