name: Trigger Local Jenkins Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
    JENKINS_TOKEN: ${{ secrets.JENKINS_ACCESS_TOKEN }}
    JENKINS_URL: http://localhost:8080
    JENKINS_USERNAME: exvbuild
    JENKINS_JOB_NAME: CMake_Build

jobs:
  build:
    runs-on: self-hosted   # Runs on Jenkins server
    steps:
      - name: Trigger Jenkins Job
        id: trigger
        
        run: |
          echo "Triggering Jenkins job from GitHub Actions..."
          echo "Call jenkins Request : ${{ github.head_ref }}"

          curl -X POST \
          "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/buildWithParameters?BRANCH_NAME=${{ github.head_ref }}" \
          --user "${JENKINS_USERNAME}:${JENKINS_TOKEN}"
          sleep 3
          LATEST_BUILD=$(curl -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/lastBuild/api/json")
          LATEST_BUILD_URL=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['url'])" "$LATEST_BUILD")
          echo "Latest Build URL in Jenkins job: $LATEST_BUILD_URL"
          echo "build_url=$LATEST_BUILD_URL" >> $GITHUB_OUTPUT
            

      - name: Wait for Jenkins job to complete
        run: |
          echo "Waiting for Jenkins job to complete..."
          MAX_ATTEMPTS=10
          SLEEP_SECONDS=5
          NEXT_BUILD_WAIT_SECONDS=2
          COUNTER=0

          LATEST_BUILD=$(curl -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} "${JENKINS_URL}/job/${JENKINS_JOB_NAME}/lastBuild/api/json")
          LATEST_BUILD_URL=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['url'])" "$LATEST_BUILD")
          echo "Latest Build URL in Jenkins Waiting job: $LATEST_BUILD_URL"

          while true; do
            BUILD_INFO=$(curl -s -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} \
            "${LATEST_BUILD_URL}api/json")

            echo "Next Build Build Info : $BUILD_INFO"

            NEXT_BUILD=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['nextBuild'])" "$BUILD_INFO")

            if [[ "$NEXT_BUILD" == None ]]; then
              echo "Next build is loading..."
            else
              echo "Next build has opened : $NEXT_BUILD"
              LATEST_BUILD_URL=$(python3 -c "import sys; sys.argv[1]['url']" "$NEXT_BUILD")
              break
            fi
            sleep $NEXT_BUILD_WAIT_SECONDS
              
          done

          echo "Latest Build URL in Jenkins After null check: $LATEST_BUILD_URL"
          
          
          while true; do
            BUILD_INFO=$(curl -s -u ${JENKINS_USERNAME}:${JENKINS_TOKEN} \
            "${LATEST_BUILD_URL}api/json")

            STATUS=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['result'])" "$BUILD_INFO")
            BUILDING=$(python3 -c "import sys, json; print(json.loads(sys.argv[1])['building'])" "$BUILD_INFO")

            echo "Build Status $STATUS"
            echo "Is Building $BUILDING"

            if [[ "$BUILDING" == true ]]; then
              echo "Build still running..."
            elif [[ "$STATUS" == "SUCCESS" ]]; then
              echo "Jenkins build succeeded!"
              break
            elif [[ "$STATUS" == "FAILURE" ]]; then
              echo "Jenkins build failed!"
              exit 1
            elif [[ "$STATUS" == "ABORTED" ]]; then
              echo "Jenkins build aborted!"
              exit 1
            else
              echo "Unknown status: $STATUS"
            fi
          
            COUNTER=$((COUNTER+1))
            if [[ $COUNTER -ge $MAX_ATTEMPTS ]]; then
              echo "Timed out waiting for Jenkins build."
              exit 1
            fi
          
            sleep $SLEEP_SECONDS
          done

      - name: Notify GitHub PR (optional)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Posting build status to PR..."
          # You can use GitHub CLI or API here to comment on PR
